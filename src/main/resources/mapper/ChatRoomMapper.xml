<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.web.userchat.mapper.ChatRoomMapper">

    <resultMap id="chatRoomMap" type="ChatRoom">
        <id property="roomId" column="room_Id"/>
        <result property="roomName" column="room_name"/>
        <result property="isGroup" column="is_group"/>
        <result property="createdAt" column="created_at"/>
        <result property="lastMessageTime" column="last_message_time"/>
        <result property="lastMessage" column="last_message"/>
    </resultMap>

    <!-- 채팅방 저장 -->
    <insert id="save" parameterType="ChatRoom" useGeneratedKeys="true" keyProperty="roomId">
        INSERT INTO chat_rooms (
                user_id,
                room_name,
                is_group,
                created_at
        ) VALUES (
                  #{userId},
                  #{roomName},
                  #{isGroup},
                  CURRENT_TIMESTAMP
        )
    </insert>

    <!-- 채팅방 삭제 -->
    <delete id="deleteChatRoom">
        DELETE FROM chat_rooms
        WHERE room_id = #{roomId};
    </delete>

    <!-- 채팅방 고유 아이디로 조회 -->
    <select id="findById" resultMap="chatRoomMap">
        SELECT *
        FROM chat_rooms
        WHERE room_id = #{roomId};
    </select>

    <!-- 채팅방 없데이트 -->
    <update id="update" parameterType="ChatRoom">
        UPDATE chat_rooms
        SET room_name = #{roomName},
            is_group = #{isGroup},
            last_message = #{lastMessage},
            last_message_time = #{lastMessageTime}
        WHERE room_id = #{roomId};
    </update>

    <!-- 1 : 1 사용자가 참여 중인 채팅방 조회 -->
    <select id="findExistingChatRoom" resultType="Long">
        SELECT r.room_id
        FROM chat_rooms r
        JOIN chat_room_participants p1 ON r.room_id = p1.room_id
        JOIN chat_room_participants p2 ON r.room_od = p2.room_id
        WHERE r.is_group = FALSE
            AND p1.user_id = #{user1Id}
            AND p2.user_id = #{user2Id};
    </select>

    <!-- 사용자가 참여 중인 채팅방 조회 -->
    <select id="findChatRoomByUserId" resultMap="chatRoomMap">
        SELECT r.room_id, r.room_name, r.is_group, r.created_at, r.last_message, r.last_message_time
        FROM chat_rooms r
        JOIN chat_room_participants p ON r.room_id = p.room_id
        WHERE p.user_id = #{userId}
        ORDER BY r.last_meesage_time DESC;
    </select>



</mapper>